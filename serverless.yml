service: ${self:custom.name}-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  architecture: arm64
  environment:
    SERVICE_NAME: ${self:service}
    SERVICE_ROLE_ARN: ${self:custom.serviceRoleArn}
    SSM_STAGE: ${param:ssm-stage, sls:stage}

plugins:
  - serverless-appsync-plugin
  - serverless-esbuild
  - serverless-export-env
  - serverless-export-outputs
  - serverless-iam-roles-per-function

package:
  individually: true

custom:
  name: ok-wildscapes
  logLevel:
    dev: ALL
    test: ALL
    prod: ERROR
    default: ERROR
  serviceRoleArn: ${ssm:/${self:service}/${param:ssm-stage, sls:stage}/serviceRoleArn}

  # Plugin configuration
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    packager: 'yarn'
    exclude: ['@aws-sdk/*']
  exportOutputs:
    include:
      - GraphQlApiUrl
      - GraphQlApiPublicKey
    output:
      file: ./.env.test.local
  export-env:
    overwrite: true
  serverless-iam-roles-per-function:
    defaultInherit: true

appSync:
  name: ok-wildscapes-api
  schema: schema.api.graphql
  authentication:
    type: API_KEY
  apiKeys:
    - name: PublicKey
      description: API key for public access
      expiresAfter: 365d
  logging:
    level: ${self:custom.logLevel.${sls:stage}, self:custom.logLevel.default}
    retentionInDays: 14

  resolvers:
    Query.listConsultations:
      kind: UNIT
      dataSource: okWildscapesTable
      code: resolvers/listConsultations.ts

    Mutation.requestConsultation:
      kind: UNIT
      dataSource: requestConsultationLambda
      code: resolvers/requestConsultation.ts

  dataSources:
    okWildscapesTable:
      type: AMAZON_DYNAMODB
      description: 'Main App Table'
      config:
        tableName: !Ref OkWildscapesTable

    requestConsultationLambda:
      type: AWS_LAMBDA
      name: requestConsultationFunction
      config:
        functionName: requestConsultation

functions:
  requestConsultation:
    handler: functions/requestConsultation.handler
    environment:
      TABLE_NAME: !Ref OkWildscapesTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - sts:assumeRole
        Resource:
          - !GetAtt OkWildscapesTable.Arn
          - ${self:custom.serviceRoleArn}

resources:
  Resources:
    OkWildscapesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

  Outputs:
    GraphQlApiUrl:
      Value: !GetAtt GraphQlApi.GraphQLUrl
    GraphQlApiPublicKey:
      Value: !GetAtt GraphQlApiPublicKey.ApiKey
